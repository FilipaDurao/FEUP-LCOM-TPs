#ifndef __TIMER_H
#define __TIMER_H

/** @defgroup timer timer
 * @{
 * Functions for manipulating the timer
 */

#define TIMER_ERROR_OCCURED 1
#define TIMER_SUCCESS 0

/**
 * @brief Subscribes and enables Timer 0 interrupts
 *
 * @return Returns bit order in interrupt mask; negative value on failure
 */
int timer_subscribe_int(void );

/**
 * @brief Unsubscribes Timer 0 interrupts
 *
 * @return Return 0 upon success and non-zero otherwise
 */
int timer_unsubscribe_int();

/**
 * @brief Gets the current timer int counter value
 *
 * @return The number of interrupts that have been generated by the timer
 */
extern unsigned int timer_get_int_counter();    // Extern from assembly_timer.S

/**
 * @brief Timer 0 interrupt handler , increments timer interrupt Counter. Extern from assembly_timer.S
 *
 * @return void
 */
extern void timer_int_handler();    // Extern from assembly_timer.S

/**
 * @brief Handles the timer, raising events
 *
 * @return void
 */
void handle_timer();

/** @} end of timer */

#endif /* __TIMER_H */
